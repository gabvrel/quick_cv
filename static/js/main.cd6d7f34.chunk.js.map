{"version":3,"sources":["components/Header.jsx","components/Skills.jsx","components/Porfolio.jsx","components/Profile.jsx","components/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","position","Container","className","Skills","href","color","Slider","disabled","defaultValue","aria-labelledby","projects","name","img","desc","url","undefined","Portfolio","useState","data","setData","Card","src","title","frameborder","allow","allowfullscreen","Button","variant","onClick","prev","length","useStyles","makeStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","Profile","classes","React","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","map","label","index","Step","key","StepLabel","StepContent","step","getStepContent","el","i","Link","Paper","square","elevation","Typography","Body","App","style","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd6d7f34.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\n\nconst Header = () => {\n    return(\n        <AppBar position=\"static\">\n            <Container className=\"Header\">\n                <div>\n                    <div className=\"photo\"/>\n                </div>\n                <div className=\"bio\">\n                    <h1>Gabriel Espinosa</h1>\n                    <h4>\n                    Loyalty is a two-way route if I ask you it from you'll have it from me.\n                    </h4>\n                </div>\n            </Container>\n        </AppBar>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Slider from '@material-ui/core/Slider';\n\nconst Skills = () => {\n    return (\n        <div className=\"Skills\">\n            <div className=\"icons\">\n                <a href=\"https://www.linkedin.com/in/gabriel-espinosa-92a011109\"><LinkedInIcon  color=\"primary\"/> </a> \n                <a href=\"https://github.com/gabvrel\"><GitHubIcon color=\"primary\"/> </a> \n                <a href=\"mailto:gabvrel@gmail.com\"><MailIcon color=\"primary\"/></a> \n            </div>\n            <div className=\"info\">\n                <h1>Skills</h1>\n                <div className=\"slider\">\n                 <h3>JavaScript</h3>   \n                <Slider disabled defaultValue={95} aria-labelledby=\"js-slider\" />\n                </div>\n                <div className=\"slider\">\n                 <h3>Python</h3>   \n                <Slider disabled defaultValue={90} aria-labelledby=\"py-slider\" />\n                </div>\n                <div className=\"slider\">\n                 <h3>React/React Native</h3>   \n                <Slider disabled defaultValue={85} aria-labelledby=\"react-slider\" />\n                </div>\n                <div className=\"slider\">\n                 <h3>Machine Learning</h3>   \n                <Slider disabled defaultValue={55} aria-labelledby=\"react-slider\" />\n                </div>\n                \n            </div>\n            <div className=\"profile\">\n                <h2>Profile</h2>\n                <p>I'm Gabriel a software developer ready for new challenges. I play the violin and the piano, speak English, Spanish, Russian, and learning German. If you are interested in my profile don't hesitate and contact me!</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Skills;","import React, {useState} from \"react\";\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\n\nconst projects = [\n    {name: \"Galiya\", \n     img:  \"https://www.youtube.com/embed/f14q3nkVevg?rel=0&modestbranding=1\",\n     desc: \"Mobile app developed for an university in an effort to improve old people skills\",\n     url: \"https://github.com/gabvrel/galiya\"},\n     {name: \"CoronaEc_bot\", \n     img:  \"https://www.youtube.com/embed/m-54dKcocJ8?rel=0&modestbranding=1\",\n     desc: \"Django rest api designed for a mobile sales application\",\n     url: undefined}\n]\n\n\nconst Portfolio = () => {\n    const [data, setData] = useState(0)\n\n    const nextPr = () => {\n        setData((prev) => prev + 1)\n    };\n\n    const prevPr = () => {\n        setData((prev) => prev - 1)\n    };\n\n    return(\n        <div className=\"pContainer\">\n                <h2>{projects[data].name}</h2>\n                <Card className=\"Project\">\n                <iframe src={projects[data].img}\n                title={projects[data].name} \n                frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; \n                encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                <p>{projects[data].desc} {projects[data].url !== undefined ?\n                    <span><a href={projects[data].url}>Link</a> </span>\n                 :\n                 undefined\n                 }\n                 </p>\n                <div className=\"nav\">\n                <Button variant=\"contained\" onClick={prevPr} color= \"primary\" disabled={data === 0 ? true : false}>\n                    Previous Project\n                </Button>\n                <Button variant=\"contained\" onClick={nextPr} color=\"primary\" disabled={data + 1 === projects.length ? true : false}>\n                    Next Project\n                </Button>  \n                </div>\n                </Card>\n        </div>\n\n    )\n};\n\nexport default Portfolio;","import React, { Fragment } from \"react\";\nimport Stepper from '@material-ui/core/Stepper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Portfolio from \"./Porfolio\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\n\nfunction getSteps() {\n    return ['Employment History', 'Education', 'My Recent Projects'];\n}\n\nfunction getStepContent(step) {\n    switch (step) {\n        case 0:\n            return [[\"Sofware Developer at nONe Agency, Moscow\", \"2017-2018\",\n                `nOne is an advertising agency located in MOscow, Russia`,\n                \"https://none.ru\"],\n            [\"Frontend Developer at Ntl-Wealth, Panama\", \"2018-2019\",\n                \"A tax haven consulting company\", \"https://panamaresidency.net\"],\n            [\"Freelance Software Enginner, Quito\", \"2019-Current\",\n                \"Designer, Mobile and Desktop app developer\", undefined]\n            ];\n        case 1:\n            return [[\"Computer Science Engginner, Moscow Power Enginnering Institute, Moscow\",\n                \"2012-2017\", \"The Moscow Power Engineering Institute today is one of the largest technical universities in Russia in the field of power engineering, electrical engineering, electronics, computer science MEI has been training engineering and scientific personnel for foreign countries since 1946. Currently, students and postgraduates from 68 countries of the world study at MPEI\",\n                \"https://mpei.ru/Pages/default.aspx\"]];\n        case 2:\n            return [[]];\n        default:\n            return 'Unknown step';\n    }\n}\n\n\nconst Profile = () => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div className=\"Profile\">\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel><h2>{label}</h2></StepLabel>\n                        <StepContent>\n                            {getStepContent(index).map((el, i) => {\n                                return (\n                                    <div className=\"content\" key={i}>\n                                        {el.length === 0 ? <Portfolio />\n                                            :\n                                            <Fragment>\n                                                <h2>{el[0]}</h2>\n                                                <div>\n                                                    <h3>{el[1]}</h3>\n                                                    <p>{el[2]}</p>\n                                                    {el[3] !== undefined ?\n                                                        <Link href={el[3]}>\n                                                            Visit Webpage\n                                                </Link>\n                                                        :\n                                                        undefined\n                                                    }\n                                                </div>\n                                            </Fragment>\n                                        }\n                                    </div>\n                                )\n                            })}\n\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        className={classes.button}\n                                    >\n                                        Back\n                  </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n                </Paper>\n            )}\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport Skills from \"./Skills\";\nimport Profile from \"./Profile\";\n\nconst Body = () => {\n    return(\n    <div className=\"Body\">\n        <Skills/>\n        <Profile/>\n    </div>\n    )\n}\n\nexport default Body;","import React from 'react';\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Container from '@material-ui/core/Container';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div style={{backgroundColor: \"#f5f5f5\"}}>\n      <Container >\n        <Body />\n      </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}